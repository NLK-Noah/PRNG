\documentclass{article}
\usepackage{graphicx} % Required for inserting images
\usepackage[left=2cm,right=2cm,top=0.5cm,bottom=2cm]{geometry}
\usepackage[T1]{fontenc}
\usepackage[utf8]{inputenc}
\usepackage[french]{babel}
\title{Projet OptiQuest}
\author{Noah Moussaoui Nizar El Jihad Kobe Van Den Brill }
\date{ 10 November 2023}

\begin{document}
\maketitle
\begin{figure}[h]
    \centering
    \includegraphics[scale=0.4]{photo/logo.png}
    \label{ucl}
\end{figure}

\section{Introduction}
Nous avons travaillé sur un projet que nous avons intitulé le projet OptiQuest.
OptiQuest est un programme qui réponds à la demande de notre client. Nous avons été 3 personnes  travaillé en collaboration sur OptiQuest. Le projet a duré 1 mois et voici notre rapport expliquant comment fonctionne OptiQuest quelles sont ses qualités et ses défauts. 

\section{Context}
Dans le cadre de l'APP2 du cours LSINC1001 . Nous avons été contactés par un client qui souhaitait avoir un qcm automatisé en python avec certaines conditions spécifiés lors d'une réunion primitif avant le lancement de OptiQuest qui se retrouve plus tard dans ce rapport. Ce projet que nous avons donc appellé OptiQuest. Il consiste a crée un QCM intéractif dans le  terminal de commande et exécute les questions données dans un fichier .txt choisit au préalable par l'utilisateur.

\section{Les outils utilisés}
Nous avons utilisé l'outil GITHUB pour le partage de notre programme ainsi que ses avancées et de ses anciennes versions .Le programme est écrit dans le language informatique qui est Python. Pour la rédaction de ce rapport nous utilisons overleaf pour ce document écrit en LateX et pour nos réunions ou nos moment de co-working en équipe nous utilisons Discord. Les supports de cours ou des recherches sur internet  nous ont été utile dans la réalisation de ce projet.

\section{Les prérequis du client}\label{p}
\begin{enumerate}
    \item Il doit avoir 4 méthodes de cotation qui sont les suivantes:
    \begin{enumerate}
        \item Cotation cool: elle compte 1 point si la réponse est correcte et 0 si la réponse est mauvaise.
        \item Cotation sévère: elle compte 1 point si la réponse est correct et -1 si la réponse est mauvaise.
        \item Cotation anti-hasard: elle est compte les points selon la valeur de la question.
        \item Cotation tout: elle éxecute chaque cotation et les compares en donnant un retour à l'utilisateur.
    \end{enumerate}
    
    \item L'affichage dans le terminal:\\
    Le client souhaite offrir à l'utilisateur la possibilité de préalablement choisir sa méthode de cotation. Les questions seront ensuite affichées successivement dans le terminal, suivies d'un récapitulatif de la session de QCM, incluant les points obtenus et les retours sur les réponses incorrectes.

\end{enumerate}
\section{Optiquest l'histoire}
Nous avons débuté par une réunion avec le client afin de rédiger un compte rendu détaillé, reflétant les échanges et les requêtes exprimées par le client. Nous avons également présenté des idées novatrices que nous pourrions intégrer à OptiQuest. Nous avons divisé le problème en plusieurs problémes (sous-fonctions).Par la suite, nous avons établi un cahier des charges  et élaboré un planning pour le projet. Ce dossier a été livré dans les délais impartis et a été accepté par le client, nous permettant ainsi de lancer officiellement le projet OptiQuest le 10 octobre 2023.Nos premiers efforts se sont concentrés sur la conception de la structure du code et son architecture. Par la suite, nous avons élaboré une présentation PPTX pour mettre en avant les progrès réalisés dans le développement d'OptiQuest. Cette démonstration a été partagée avec le client le 10 novembre 2023 et a été bien accueillie et aujpurd'hui nous sommes arrivé à la fin de ce projet et nous rendons OptiQuest dans les délais promit au client.

\section{Comment OptiQuest marche}
Optiquest marche de façon simple pour l'utilisateur. En tout premier lieu il est demandé à l utilisateur de choisir son fichier de QCM.txt de préférence. Ensuite un message qui comporte les règles:\\

1|REPONDEZ UNIQUEMENT PAR LE NUMERO DE LA QUESTION ET NON LA REPONSE !
2|ENTRER DEUX FOIS LA MÊME RÉPONSE VOUS PÉNALISERA OU PAS SELON LE CHOIX DE COTATION !
 PS: Vous êtes obligé de répondre autant de fois que le nombre de bonne réponses\\

Ensuite il est demandé à l'utilisateur d'entrer j'accepte pour accepter ces règles sinon il ne peut pas lancer le programme et sera dans l'incapacité d'y répondre et devra relancer le programme.
pour accepter les règles par la suite il pourra participer au QCM. Il arrive à l'étape de choix de sa méthode de cotation entre:
\begin{enumerate}
    \item Cotation cool
    \item Cotation sévère
    \item Cotation anti-hasard
    \item Cotation Tout
\end{enumerate}
leurs fonctions sont notées ci-dessus dans ce rapport  dans la section << Les prérequis du client>>.\\

Par la suite l'utilisateur doit répondre aux questions en entrant les numéros des reponses qui sont spécifique à la question. Il faut savoir que OptiQuest calcule à l'avance le nombre de bonne réponse et propose donc à l'utilisateur de rentrer autant de réponses qu il y a des bonnes selon le calcul établit par Optiquest. Pour finir à la fin des séances de questions l'utilisateur reçoit un compte rendu de ses points selon la méthode de cotation choisie et les réponses où il a eu mauvais ainsi que un feedback . 

\section{Le code de OptiQuest}
OptiQuest est crée  en 2 fonctions:\\
\begin{enumerate}
    \item La fonction importfile()
        \begin{enumerate}
            \item elle permet à l'utilisateur de choisir le QCM au quel il souhaite répondre.
            \item elle permet d'aller lire dans le fichier QCM.txt ou QCM2.txt et de ressortit de la les questions et les réponses dont on a besoin grace à une fonction nattif au fichier qcm.py buildquestionnaire(filename).
        \end{enumerate}
    \item Optiquest(questions)
       Cette fonction est un enssemble de sous-fonctions qui par soucis de compilation à du se retrouver toutes au seins de la même fonction car elles partagent des variables globales.
        \begin{enumerate}
            \item Elle permet de choisir la méthode de cotation.
            \item Initialisation des listes de réponses True ou False ainsi que la liste de la réponse aussi initialisation des compteurs de points.
            \item Elle affiche question par question et calcule question par question un nouveau compteur selon les réponses de l'utilisateur.
            \item Elle affiche les points obtenus ( le compteur final) par l'utilisateur durant la séance de QCM ainsi q'un feedback pour les mauvaises réponses 
        \end{enumerate}
\end{enumerate}
Toutes ces fonctions sont appellées dans la fonctionn  main qui est celle qui éxécute le programme.

\section{Le groupe}
Notre groupe a été un peu mouvementé comme expliqué lors de notre présentation devant le client. Mais pour les 2 restants dans le groupe  la communication  a été l'un de notre plus grand point fort chacun apportant ses connaissances à OptiQuest que ça soit dans le dommaine programme ou UI et UX. Des rendez-vous journalier respectés ainsi que des compte rendus hebdomadaires. Des explications claires et faciles a comprendre pour l'autre. Notre amitié a été plus que un point bénéfique à ce projet, la connaissance de l'autre et les activités hors projet nous assemble et nous permette de réussir à régler des problèmes de plus en plus compliqués.


\section{Conclusion}
Pour conclure, ce rapport et le projet OptiQuest. Nous sommes très fiers d'avoir réalisé cela en si peu de temps et en très petit comité. Ce projet nous à permis de solutionner des problèmes qui nous semblaient presque impossible il y a près de 1 mois mais la persévérence , l'étude  nous a permit de finir OptiQuest en très peu de temps et de même se pencher sur l'UX et l'UI et aussi lui ajouter des fonctionalités. \\




\author{Noah Moussaoui Nizar El Jihad Kobe Van Den Brill }




\end{document}

